get:
  summary: Returns a list of weather data
  description: >
    Returns a list of weather data sorted by `measurement_date`.

    With the optional parameter `stationIds`, only the weather data for the specified station ids will be returned.

    With the optional parameters `startDate` and `endDate`, only the weather data within the specified date range (inclusive) will be returned. If `endDate` is omitted, it defaults to today's date. If `startDate` is omitted, it includes all data up to `endDate`.

    If the operation was successful (status code `200`), an array with weather data will be returned.
  operationId: getAllWeatherData
  tags:
    - WeatherData
    - Get
    - GetAll
  parameters:
    - name: stationIds
      in: query
      required: false
      description: A set of station ids used to filter the results of weather data. Only weather data for the specified station ids will be returned.
      schema:
        type: array
        items:
          type: integer
    - name: startDate
      in: query
      required: false
      description: The start date of the date range used to filter the results of weather data. Only weather data within the specified date range (inclusive) will be returned. If omitted, it includes all data up to `endDate`.
      schema:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2}$'
        description: The date format specified by RFC 3339.
        example: '2023-08-01'
      x-federation:
        filter:
          type: lowerbound(inclusive)
          source: MeasurementDate
          extractors:
            - parse_rfc3339
    - name: endDate
      in: query
      required: false
      description: The end date of the date range used to filter the results of weather data. Only weather data within the specified date range (inclusive) will be returned. If omitted, it defaults to today's date.
      schema:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2}$'
        description: The date format specified by RFC 3339.
        example: '2023-08-01'
      x-federation:
        filter:
          type: upperbound(inclusive)
          source: MeasurementDate
          extractors:
            - parse_rfc3339
    - $ref: "../openapi.yaml#/components/parameters/Offset"
    - $ref: "../openapi.yaml#/components/parameters/Limit"
  x-federation:
    - sort-by:
        parameter: MeasurementDate
        extractors:
          - parse_rfc3339          
    - dedup-by:
          - "/station_id"
          - "/measurement_date"
  responses:
    "200":
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../openapi.yaml#/components/schemas/WeatherData"
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"

post:
  summary: Adds new weather data
  description: >
    Adds new weather data to the collection.
    If the operation was successful (status code `201`), the ID of the new weather data entry will be returned.
  operationId: postWeatherData
  tags:
    - WeatherData
    - Add
  requestBody:
    required: true
    description: Weather data to be added to the collection
    content:
      application/json:
        schema:
          $ref: "../openapi.yaml#/components/schemas/WeatherData"
  responses:
    "201":
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              station_id:
                type: integer
                format: int32
                description: The ID of the weather station.
              measurement_date:
                type: string
                pattern: '^\d{4}-\d{2}-\d{2}$'
                description: The reference date of the weather data, following the format specified by RFC 3339.
                example: '2023-08-01'
            required:
              - station_id
              - measurement_date
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
