get:
  summary: Returns all tokens of the user
  description: >
    Returns a list of (all) existing tokens of the user.
    With the optional parameter `TokenStrContains`, only the tokens with names containing all specified keywords (case insensitive) will be returned.
    If the operation was successful (status code `200`), an array with tokens will be returned.
  operationId: getUserTokens
  tags:
    - Token
    - User
    - Get
    - GetOne
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/UserId"
    - $ref: "../openapi.yaml#/components/parameters/TokenstrContains"
  responses:
    "200":
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../openapi.yaml#/components/schemas/Token"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
    "404":
      description: The specified resource was not found
      links:
        GetAllTokensRedirected:
          $ref: "../openapi.yaml#/components/links/GetAllTokensRedirected"
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"

post:
  summary: Creates a new token of the given `tokenstr`
  description: >
    Creates a new token with no access rights.
    If the operation was successful (status code `201`), the created token will be returned.
  operationId: postUserToken
  tags:
    - Token
    - User
    - Add
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/UserId"
  requestBody:
    required: true
    description: The token string
    content:
      application/json:
        schema:
          type: object
          description: An object representing tokenstr.
          properties:
            tokenstr:
              type: string
              description: The token string.
          required:
            - tokenstr
  responses:
    "201":
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/Token"
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"

delete:
  summary: Deletes the user and all its tokens
  description: Deletes the user and all its tokens
  operationId: deleteOneUser
  tags:
    - Token
    - User
    - Delete
    - DeleteOne
    - Modify
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/UserId"
  responses:
    "200":
      description: Successfully deleted user
      links:
        GetAllTokensRedirected:
          $ref: "../openapi.yaml#/components/links/GetAllTokensRedirected"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
    "404":
      description: The specified resource was not found
      links:
        GetAllTokensRedirected:
          $ref: "../openapi.yaml#/components/links/GetAllTokensRedirected"
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
