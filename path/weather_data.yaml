get:
  summary: Returns weather data for a specific station and date
  description: >
    Returns weather data for a specific weather station and date.
    The parameters `WeatherStationId` and `MeasurementDate` are required to get the specific weather data.
    If the operation was successful (status code `200`), the weather data will be returned.
  operationId: getWeatherData
  tags:
    - Weather Data
    - Get
    - GetOne
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/WeatherStationId"
    - $ref: "../openapi.yaml#/components/parameters/MeasurementDate"
  responses:
    "200":
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/WeatherData"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
    "404":
      description: The specified resource was not found
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
delete:
  summary: Removes weather data for a specific station and date
  description: >
    Removes weather data for a specific weather station and date.
    The parameters `WeatherStationId` and `MeasurementDate` are required to delete the specific weather data.
  operationId: deleteWeatherData
  tags:
    - Weather Data
    - Delete
    - DeleteOne
    - Modify
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/WeatherStationId"
    - $ref: "../openapi.yaml#/components/parameters/MeasurementDate"
  responses:
    "200":
      description: Successfully deleted weather data
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"   
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
    "404":
      description: The specified resource was not found
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
post:
  summary: Adds new weather data
  description: >
    Adds new weather data to the collection.
    If the operation was successful (status code `201`), the ID of the new weather data entry will be returned.
  operationId: postWeatherData
  tags:
    - Weather Data
    - Add
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/WeatherStationId"
    - $ref: "../openapi.yaml#/components/parameters/MeasurementDate"
  requestBody:
    required: true
    description: Weather data to be added to the collection
    content:
      application/json:
        schema:
          $ref: "../openapi.yaml#/components/schemas/WeatherData"
  responses:
    "201":
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: ID of the created weather data entry.
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
patch:
  summary: Patches weather data for a specific station and date
  description: >
    Patches weather data for a specific weather station and date.
    The parameters `WeatherStationId` and `MeasurementDate` are required to replace the specific weather data with the new one.
    Also, the new data (`WeatherDataPatch`) is required.
    If the operation was successful (status code `200`), the new weather data will be returned.
  operationId: patchWeatherData
  tags:
    - Weather Data
    - Change
    - Modify
  parameters:
    - $ref: "../openapi.yaml#/components/parameters/WeatherStationId"
    - $ref: "../openapi.yaml#/components/parameters/MeasurementDate"
  requestBody:
    required: true
    description: The updated properties to patch
    content:
      application/json:
        schema:
          $ref: "../openapi.yaml#/components/schemas/WeatherDataPatch"
  responses:
    "200":
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/WeatherData"
    "400":
      $ref: "../openapi.yaml#/components/responses/BadRequest"
    "401":
      $ref: "../openapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../openapi.yaml#/components/responses/Forbidden"
    "404":
      description: The specified resource was not found
    "500":
      $ref: "../openapi.yaml#/components/responses/BackendError"
