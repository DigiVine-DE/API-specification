type: object
required:
  - type
  - features
  - properties
  - planter_runs
properties:
  # GeoJSON Type "FeatureCollection"
  type:
    type: string
    enum:
      - Feature
  # Array of GeoJSON Features
  geometry:
    $ref: "../openapi.yaml#/components/schemas/MultiPolygon"
    # The dimensions of the field (described as a geometric object)
  planter_runs:
    type: array
    items:
      $ref: "../openapi.yaml#/components/schemas/PlanterRun"
    description: An array with data on planting
  # Metadata referencing related objects
  properties:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: The numeric ID of the field
        example: 4711
      name:
        type: string
        description: Field location
        example: DÃ¼rkheimer Michelsberg
      station_id:
        type: integer
        format: int64
        description: The numeric ID of the station that makes Forecasts for a group of Fields.
        example: 4711
      historical_station_id:
        type: integer
        format: int32
        description: The numeric ID of the historical weather station associated with the fields.
        example: 4711
      number:
        type: string
        description: The Number of the Field (not the ID)
        example: 471/1
      size:
        type: number
        format: double
        description: Size of the Field given in square meters
        example: 47.11
      fruit_name:
        type: string
        description: Name of the fruit on this Field
        example: Riesling
x-federation:
  has-resources:
    - resource: PlanterRun
      path: "/planter_runs"
  has-parameters:
    - parameter: FieldId
      path: "/properties/id"
      is-artificial-id: true
    - parameter: Box2d
      path: "/geometry/bbox" 
